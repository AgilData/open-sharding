# ospdriver.properties
#
# Copyright (c) 2009 - 2011 CodeFutures Corporation. All rights reserved.
#

# This properties file is used to control any Open Sharding Protocol (OSP) database driver.
#
# Note: Only the OspJdbcDriver, using driver.mode=delegate is currently supported.
#
#
# For use with JDBC, using the OspJdbcDriver:
# 
# - Put this properties file anywhere on the Java classpath.
# - Install the osp-jdbc-driver-with-dependencies.jar file in the Java classpath of the application.  
#
# The JDBC URL format for the driver in OSP mode is:
# 
# jdbc:osp:[path-to-opsjdbcdriver.properties]
#
# Example:
#
# jdbc:osp:/opt/osp/conf/ospdriver.properties
#
#
# The JDBC URL format for the driver in delegate mode is the normal vendor URL format:
#
# jdbc:[vendor JDBC string]
#
#

#
# Driver properties (for all types of OSP drivers). 
#

# Set the driver mode. Valid values are: delegate|osp
# In delegate mode, the driver delegates to another vendor driver. This mode is typically used
# in conjunction with driver.analyze.log=true, to generate log output for the shard analyze process.
# In osp mode, the driver communicates with an Open Sharding Protocol (OSP) server, using high-performance inter-process
# communication (when running on the same server), or via TCP/IP when communicating with an OSP server over the network.
# Note: Only delegate mode is currently supported.
driver.mode=delegate

# Delegate JDBC Driver. This is the actual JDBC Driver used to connect to the database, with driver.mode=delegate.
# This property only applies to the use of the OspJdbcDriver.
# Specify the normal vendor driver used to connect to the target database, such as the JConnect driver for MySQL.
# In osp mode, or for a non-jdbc driver, this property is ignored.
driver.class.name=com.vendor.VendorJDBCDriver

# TODO: How should the JDBC URL actually work, and also the ODBC DSN. The goal is to keep it as natural as possible.

# The OSP server host. If its local, localhost can be used, otherwise the IP address or domain name of the server.
# Only valid in osp mode.
osp.server.host=

# The OSP server port. Defaults to 4001.
osp.server.port=4001

# If set to true, the driver will generate a shard analyze log. 
# A shard analyze log can be generated with any mode or OSP driver type.
# Note that the shard analyze log creates a log entry for every API call made by the driver,
# therefore this should only be run in a test environment, as performance is adversely affected. 
shard.analyze.log=true

# Maximum size of a single shard analyze log file. Defaults to 10MB.
shard.analyze.log.limit=10485760

# Maximum number of shard analyze log files to generate. Defaults to 100. 
shard.analyze.log.maxfiles=100

# Maximum number of hours to run the logging driver. 0 indicates no limit.
shard.analyze.log.maxhours=0

# Directory to write the shard analyze logs. Defaults to current working directory.
shard.analyze.log.dir=/var/log/osp-analyze

