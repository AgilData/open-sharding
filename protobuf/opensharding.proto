// Open Sharding Protocol (OSP) version 1.0.0
//
// Copyright (C) 2011 CodeFutures Corporation. All rights reserved.


package org.opensharding.protocol;

message OSPConnectRequest {
    required string database      = 1;
    required string user          = 2;
    required string password      = 3;
    optional bool   autocommit    = 4;
    optional bool   useNamedPipes = 5;
    optional string requestPipe   = 6;
    optional string responsePipe  = 7;
}

message OSPConnectResponse {
    required string connID               = 1;
    required string requestPipeFilename  = 2;
    required string responsePipeFilename = 3;
}

message OSPCreateStatementRequest {
    required string connID = 1;

}

message OSPCreateStatementResponse {
    required int32 stmtID = 1;

}

message OSPCloseStatementRequest {
    required string connID = 1;
    required int32 stmtID = 2;
}

message OSPCloseStatementResponse {
    required int32 stmtID = 1;
}

message OSPExecuteRequest {
    required string connID = 1;
    required int32  stmtID = 2;
    required string sql    = 3;

}

message OSPExecuteResponse {
    optional int32  resultSetID          = 1;
    optional int32  resultSetColumnCount = 2;
    optional int32  rowsAffected          = 3;
    optional int32  errorCode             = 4;
    optional string errorMessage          = 5;

}

message OSPFetchResultsRequest {
    required string connID   = 1;
    required int32  stmtID   = 2;
    required int32  resultID = 3;

}

message OSPFetchResultsResponse {
    required int32  columnCount  = 1;
    repeated string columnNames  = 2;
    repeated int32  columnTypes  = 3 [packed=true];
    repeated string columnValues = 4;
    repeated string tableNames   = 5;
}

message OSPDisconnectRequest {
    required string connID = 1;
}

message OSPDisconnectResponse {
    // empty message
}

// if a request fails due to an unexpected error, OSPWireResponse will contain an OSPErrorResponse
message OSPErrorResponse {
    required int32  errorCode = 1;
    required string errorMessage = 2;
}

message OSPWireRequest {

  enum MessageType {
    connect         = 1;
    createStatement = 2;
    execute         = 3;
    fetchResults    = 4;
    disconnect      = 5;
    closeStatement  = 6;
  }

  required int32       requestID   = 1;
  required MessageType messageType = 2;
  optional int32       options     = 3;  // reserved for future use
  optional int32       action      = 4;  // reserved for future use

  optional OSPConnectRequest         connectRequest         = 100;
  optional OSPCreateStatementRequest createStatementRequest = 101;
  optional OSPExecuteRequest         executeRequest         = 102;
  optional OSPFetchResultsRequest    fetchResultsRequest    = 103;
  optional OSPDisconnectRequest      disconnectRequest      = 104;
  optional OSPCloseStatementRequest  closeStatementRequest  = 105;
}

message OSPWireResponse {

  enum MessageType {
    connect         = 1;
    createStatement = 2;
    execute         = 3;
    fetchResults    = 4;
    disconnect      = 5;
    closeStatement  = 6;
  }

  // required header information
  required int32 requestID         = 1;
  required MessageType messageType = 2;
  required int32 finalResponse     = 3;
  optional int32 status            = 4; // reserved for future use

  optional OSPConnectResponse         connectResponse         = 100;
  optional OSPCreateStatementResponse createStatementResponse = 101;
  optional OSPExecuteResponse         executeResponse         = 102;
  optional OSPFetchResultsResponse    fetchResultsResponse    = 103;
  optional OSPDisconnectResponse      disconnectResponse      = 104;
  optional OSPCloseStatementResponse  closeStatementResponse  = 105;
}